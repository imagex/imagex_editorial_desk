<?php
/**
 * @file
 * Code for the Imagex Editorial Desk feature.
 */

include_once 'imagex_editorial_desk.features.inc';

/**
 * Implements hook_ctools_plugin_directory().
 */
function imagex_editorial_desk_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'ctools' && $plugin_type == 'content_types') {
    return 'plugins/' . $plugin_type;
  }
}

/**
 * Implements hook_permission().
 */
function imagex_editorial_desk_permission() {
  // Add some customer permissions for "assigned" users
  return array(
    'view own assigned assignments' => array(
      'title' => t('View Own Assigned Assignments'),
      'description' => t('Allows user view access to assignments they are assigned to.'),
    ),
    'update own assigned assignments' => array(
      'title' => t('Update Own Assigned Assignments'),
      'description' => t('Allows user update access to assignments they are assigned to.'),
    ),
    'delete own assigned assignments' => array(
      'title' => t('Delete Own Assigned Assignments'),
      'description' => t('Allows user delete access to assignments they are assigned to.'),
    ),    
  );
}

/**
 * Implements hook_entity_info_alter().
 */
function imagex_editorial_desk_entity_info_alter(&$entity_info) {
  if (!empty($entity_info['assignment'])) {
    $entity_info['assignment']['access callback'] = 'imagex_editorial_desk_assignment_entity_access';
  }
}

/**
 * Implements hook_form_alter().
 */
function imagex_editorial_desk_form_alter(&$form, &$form_state, $form_id) {
  // Hijack assignment entity validation
  // Rules form support isn't sufficient so do this manually
  if ($form_id == 'eck__entity__form_edit_assignment_assignment' || $form_id == 'eck__entity__form_add_assignment_assignment') {
    $form['#validate'][] = 'imagex_editorial_desk_assignment_validate';
  }
}

/**
 * Custom validation hook for assignment entities
 *
 * Rules form or Entity Rules support isn't sufficient so do this manually
 * as we need to set an error to make the form reload
 */
function imagex_editorial_desk_assignment_validate(&$form, &$form_state) {
  // Only on save   
  if ($form_state['clicked_button']['#value'] == t('Save')) {
    $entity = $form_state['values']['entity'];
    $validation_rules = array(
      'rules_imagex_editorial_desk_assignment_node_has_assignment',
      'rules_imagex_editorial_desk_assignment_user_has_content_access',
    );
    $error = array();
    foreach ($validation_rules as $rule) {
      // Rules provide "validation_fail" variable to trigger error
      $error = rules_invoke_component($rule, $entity);
      if (!empty($error[0])) {
        form_set_error("field_");
      }
    }
  }
}

/**
 * Custom access callback for assignments
 */
function imagex_editorial_desk_assignment_entity_access($op, $entity_or_bundle, $account = NULL, $entity_type_name) {
  // Use global user if non passed
  if (!isset($account)) {
    global $user;
    $account = $user;
  }    
    
  // Call default ECK access function
  $access = eck__entity_access($op, $entity_or_bundle, $account, $entity_type_name);
  
  // Now check our custom permissions & if user is assigned user
  // We assume eck__entity_access is denying access to non-admin users
  // if they are the assigned user & have correct "own" perms grant access
  if (is_object($entity_or_bundle)) {
    // We assume users can access asignments at any "status"
    $entity_wrapper = entity_metadata_wrapper('assignment', $entity_or_bundle);
    $assigned_user = $entity_wrapper->field_assignment_assigned_user->value();
    if (user_access($op . ' own assigned assignments', $account) && $account->uid == $assigned_user->uid) {
      $access = TRUE;
    }
  }
  
  return $access;
}